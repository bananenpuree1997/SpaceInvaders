apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

// Grr, old java versions :(
sourceCompatibility = '1.3'
targetCompatibility = '1.3'

group = 'io.github.bananenpuree1997'
archivesBaseName = project.name.toLowerCase()
version = 'dev-SNAPSHOT'

// The XleT that will be run when the 'runGame' task is executed

repositories {
    mavenCentral()
}

dependencies {
    compile files("tools/mhp-1.1.2-1.1.jar")
}

// No warnings please.
tasks.withType(JavaCompile) {
    options.warnings = false
}

def outputDir = file("${project.buildDir}/output")

// Put all the resources and classes in the same
// directory, this is required for the XleTView program
sourceSets {
    main {
        output.resourcesDir = outputDir
        java.outputDir = outputDir
    }
}

//////////////////////////
/// XleT Testing task. ///
//////////////////////////

def xletviewDir = file("${buildDir}/xletview")

// Extracts the XleTView zip file to a directory inside the build dir
task unzipXletview(type: Copy) {
    from zipTree(file("tools/xletview-0.3.6.zip"))
    into xletviewDir
}

// Run the XleTView program and start the target XleT
task runXlet(type: JavaExec, dependsOn: ['classes', 'unzipXletview']) {
    main = 'net.beiker.xletview.Main'
    classpath = files("${xletviewDir}/xletview.jar")
    workingDir(xletviewDir)
    args '-xletPath', outputDir, '-xletClass', project.xlet_name
}

////////////////////////////////////
/// Gradle Wrapper update tasks. ///
////////////////////////////////////

// Gradle version used for generating the Gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

// A custom update wrapper task, using a custom task prevents
// intellij from updating the wrapper constantly through
// the wrapper task
task updateWrapper(dependsOn: wrapper)

gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
    // Only enable the wrapper task if the updateWrapper task is run
    wrapper.enabled = graph.allTasks.contains(updateWrapper)
}